/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import conexao.ProdutosDAO;
import java.awt.Color;
import static java.awt.Color.white;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import negocio.Produto;

/**
 *
 * @author felip
 */
public class Tela_atualizar extends javax.swing.JFrame {

    int rgbcolor_green = Color.HSBtoRGB(0.38f, 0.93f, 0.73f);
    int rgbcolor_red = Color.HSBtoRGB(1.0f, 0.89f, 0.77f);

    Color coloruse_green = new Color(rgbcolor_green);
    Color coloruse_red = new Color(rgbcolor_red);

    /**
     * Creates new form Tela_atualizar
     */
    public Tela_atualizar() {
        initComponents();
        setIcon();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        id_att = new javax.swing.JTextField();
        prod_att = new javax.swing.JTextField();
        valor_att = new javax.swing.JTextField();
        custo_att = new javax.swing.JTextField();
        vm_att = new javax.swing.JTextField();
        est_att = new javax.swing.JTextField();
        att_bt = new javax.swing.JButton();
        est_bt = new javax.swing.JButton();
        vm_bt = new javax.swing.JButton();
        val_bt = new javax.swing.JButton();
        cus_bt = new javax.swing.JButton();
        prod_bt = new javax.swing.JButton();
        vm_stt = new javax.swing.JLabel();
        prod_stt = new javax.swing.JLabel();
        est_stt = new javax.swing.JLabel();
        id_stt = new javax.swing.JLabel();
        val_stt = new javax.swing.JLabel();
        custo_stt = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Atualizar Produtos");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        id_att.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(id_att, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 100, 30));

        prod_att.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(prod_att, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 200, 28));

        valor_att.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(valor_att, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, 200, 28));

        custo_att.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(custo_att, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 240, 200, 28));

        vm_att.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(vm_att, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 304, 200, 28));

        est_att.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(est_att, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 370, 200, 28));

        att_bt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        att_bt.setToolTipText("");
        att_bt.setBorderPainted(false);
        att_bt.setContentAreaFilled(false);
        att_bt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        att_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                att_btActionPerformed(evt);
            }
        });
        getContentPane().add(att_bt, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 510, 240, 30));

        est_bt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        est_bt.setBorderPainted(false);
        est_bt.setContentAreaFilled(false);
        est_bt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        est_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                est_btActionPerformed(evt);
            }
        });
        getContentPane().add(est_bt, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 370, 200, 30));

        vm_bt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        vm_bt.setBorderPainted(false);
        vm_bt.setContentAreaFilled(false);
        vm_bt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vm_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vm_btActionPerformed(evt);
            }
        });
        getContentPane().add(vm_bt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 210, 40));

        val_bt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        val_bt.setBorderPainted(false);
        val_bt.setContentAreaFilled(false);
        val_bt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        val_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                val_btActionPerformed(evt);
            }
        });
        getContentPane().add(val_bt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 210, 40));

        cus_bt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cus_bt.setBorderPainted(false);
        cus_bt.setContentAreaFilled(false);
        cus_bt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cus_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cus_btActionPerformed(evt);
            }
        });
        getContentPane().add(cus_bt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 210, 40));

        prod_bt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        prod_bt.setBorderPainted(false);
        prod_bt.setContentAreaFilled(false);
        prod_bt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        prod_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prod_btActionPerformed(evt);
            }
        });
        getContentPane().add(prod_bt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 210, 40));

        vm_stt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        vm_stt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(vm_stt, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 310, 260, 20));

        prod_stt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prod_stt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(prod_stt, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, 260, 20));

        est_stt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        est_stt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(est_stt, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, 250, 20));

        id_stt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        id_stt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(id_stt, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 240, -1));

        val_stt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        val_stt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(val_stt, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 170, 260, 20));

        custo_stt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        custo_stt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(custo_stt, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, 260, 20));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Tela Atualizar.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void att_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_att_btActionPerformed
        val_stt.setText("");
        prod_stt.setText("");
        est_stt.setText("");
        custo_stt.setText("");
        vm_stt.setText("");

        valor_att.setBackground(white);
        prod_att.setBackground(white);
        est_att.setBackground(white);
        custo_att.setBackground(white);
        vm_att.setBackground(white);

        Produto carro = new Produto();
        ProdutosDAO car = new ProdutosDAO();

        String status_att = "Produto atualizado";

        int id = 0;

        String produto = "";
        int vendamedia = 0;
        int estoque = 0;
        double custo = 0;
        double valor = 0;
        double lucro = 0;
        int mes, id_atual, ok = 0;

        int campos_ok = 0;

        List<Produto> listaDeCarros;
        listaDeCarros = new ArrayList<>();

        try {
            listaDeCarros = car.obterListaDeCarros();
        } catch (SQLException ex) {
            Logger.getLogger(Tela_atualizar.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {

            try {
                id = Integer.parseInt(id_att.getText());

                for (Produto carroLocal : listaDeCarros) { // Iterator: Para cada carro na lista de carros...
                    id_atual = carroLocal.getIdProdutos();

                    if (id_atual == id) {
                        ok = 1;
                    }
                }

                if (ok == 1) {
                    id_att.setBackground(coloruse_green);

                    id_stt.setText("ID Encontrado");
                    campos_ok += 1;

                } else {
                    id_att.setBackground(coloruse_red);
                    id_stt.setText("ID não existe");
                }

            } catch (Exception e) {
                id_att.setBackground(coloruse_red);

            }

            produto = prod_att.getText();

            if (prod_att.getText().trim().isEmpty()) {
                prod_att.setBackground(coloruse_red);

            } else {
                prod_att.setBackground(coloruse_green);
                campos_ok += 1;
            }

            try {
                valor = Double.parseDouble(valor_att.getText());
                valor_att.setBackground(coloruse_green);
                campos_ok += 1;

            } catch (Exception e) {
                valor_att.setBackground(coloruse_red);

            }

            try {
                custo = Double.parseDouble(custo_att.getText());
                custo_att.setBackground(coloruse_green);
                campos_ok += 1;

            } catch (Exception e) {
                custo_att.setBackground(coloruse_red);

            }

            try {
                vendamedia = Integer.parseInt(vm_att.getText());
                vm_att.setBackground(coloruse_green);
                campos_ok += 1;

            } catch (Exception e) {
                vm_att.setBackground(coloruse_red);

            }

            try {
                estoque = Integer.parseInt(est_att.getText());
                est_att.setBackground(coloruse_green);
                campos_ok += 1;

            } catch (Exception e) {
                est_att.setBackground(coloruse_red);

            }

            System.out.println("Campos ok = " + campos_ok);

            lucro = valor - custo;

            mes = estoque / vendamedia;

            if (campos_ok == 6) {

                car.buscaPorId(id, carro);

                carro.setProduto(produto);
                carro.setValor(valor);
                carro.setCusto(custo);
                carro.setLucro(lucro);
                carro.setVendamedia(vendamedia);
                carro.setEstoque(estoque);

                car.atualizaCarro(carro, id);

                car.update_data_atualizar(id, mes);

                Return_atualizar st = new Return_atualizar(status_att);

                Tela_atualizar.this.dispose();

                st.setVisible(true);
            }
        } catch (Exception e) {
            status_att = "ERRO AO ATUALIZAR";

        }
    }//GEN-LAST:event_att_btActionPerformed

    private void vm_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vm_btActionPerformed
        val_stt.setText("");
        prod_stt.setText("");
        est_stt.setText("");
        custo_stt.setText("");
        vm_stt.setText("");

        valor_att.setBackground(white);
        prod_att.setBackground(white);
        est_att.setBackground(white);
        custo_att.setBackground(white);
        vm_att.setBackground(white);

        Produto carro = new Produto();
        ProdutosDAO car = new ProdutosDAO();

        String status_att = "Carro atualizado";

        int id = 0;

        int vendamedia = 0;

        int estoque = 0;

        int mes = 0;

        int id_atual = 0;

        int ok = 0;

        int campos_ok = 0;

        try {

            try {
                id = Integer.parseInt(id_att.getText());

            } catch (Exception e) {

            }

            try {
                vendamedia = Integer.parseInt(vm_att.getText());
                campos_ok += 1;
                vm_att.setBackground(coloruse_green);
                vm_stt.setText("Valor correto");

            } catch (Exception e) {
                vm_att.setBackground(coloruse_red);
                vm_stt.setText("Informe um valor correto");
            }

            List<Produto> listaDeCarros;
            listaDeCarros = new ArrayList<>();

            listaDeCarros = car.obterListaDeCarros();

            for (Produto carroLocal : listaDeCarros) { // Iterator: Para cada carro na lista de carros...
                id_atual = carroLocal.getIdProdutos();

                if (id_atual == id) {
                    ok = 1;
                    campos_ok += 1;
                    estoque = carroLocal.getEstoque();

                    id_att.setBackground(coloruse_green);
                    id_stt.setText("ID Encontrado");
                }

            }

            if (ok == 0) {
                id_att.setBackground(coloruse_red);
                id_stt.setText("ID Não Encontrado");
            }

            if (ok == 1 && campos_ok == 2) {
                mes = estoque / vendamedia;

                car.buscaPorId(id, carro);

                carro.setVendamedia(vendamedia);

                car.atualizaCarro(carro, id);

                car.update_data_atualizar(id, mes);

                vm_att.setBackground(coloruse_green);
                vm_stt.setText("Produto atualizado");
            }

        } catch (Exception e) {
            status_att = "ERRO AO ATUALIZAR";
            vm_att.setBackground(coloruse_red);
        }


    }//GEN-LAST:event_vm_btActionPerformed

    private void est_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_est_btActionPerformed
        val_stt.setText("");
        prod_stt.setText("");
        est_stt.setText("");
        custo_stt.setText("");
        vm_stt.setText("");

        valor_att.setBackground(white);
        prod_att.setBackground(white);
        est_att.setBackground(white);
        custo_att.setBackground(white);
        vm_att.setBackground(white);

        Produto carro = new Produto();
        ProdutosDAO car = new ProdutosDAO();

        String status_att = "Carro atualizado";

        int id = 0;

        int estoque = 0;

        int mes = 0;

        int vendamedia = 0;

        int id_atual = 0;

        int ok = 0;

        int campos_ok = 0;

        try {

            try {
                id = Integer.parseInt(id_att.getText());

            } catch (Exception e) {

            }

            try {
                estoque = Integer.parseInt(est_att.getText());
                campos_ok += 1;
                est_att.setBackground(coloruse_green);
                est_stt.setText("Valor correto");

            } catch (Exception e) {
                est_att.setBackground(coloruse_red);
                est_stt.setText("Informe um valor correto");

            }

            List<Produto> listaDeCarros;
            listaDeCarros = new ArrayList<>();

            listaDeCarros = car.obterListaDeCarros();

            for (Produto carroLocal : listaDeCarros) { // Iterator: Para cada carro na lista de carros...

                id_atual = carroLocal.getIdProdutos();

                if (id_atual == id) {
                    ok = 1;
                    vendamedia = carroLocal.getVendamedia();
                    campos_ok += 1;

                    id_att.setBackground(coloruse_green);
                    id_stt.setText("ID Encontrado");
                }

            }

            if (ok == 0) {
                id_att.setBackground(coloruse_red);
                id_stt.setText("ID Não encontrado");
            }

            if (ok == 1 && campos_ok == 2) {

                mes = estoque / vendamedia;

                car.buscaPorId(id, carro);

                carro.setEstoque(estoque);

                car.atualizaCarro(carro, id);

                car.update_data_atualizar(id, mes);

                est_att.setBackground(coloruse_green);
                est_stt.setText("Produto Atualizado");
            }

        } catch (Exception e) {
            status_att = "ERRO AO ATUALIZAR";
            est_att.setBackground(coloruse_red);
        }


    }//GEN-LAST:event_est_btActionPerformed

    private void cus_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cus_btActionPerformed
        val_stt.setText("");
        prod_stt.setText("");
        est_stt.setText("");
        custo_stt.setText("");
        vm_stt.setText("");

        valor_att.setBackground(white);
        prod_att.setBackground(white);
        est_att.setBackground(white);
        custo_att.setBackground(white);
        vm_att.setBackground(white);

        Produto carro = new Produto();
        ProdutosDAO car = new ProdutosDAO();

        String status_att = "Produto atualizado";

        int id = 0;
        int ok = 0;
        int campos_ok = 0;

        int id_atual = 0;

        double custo = 0;

        double valor = 0;

        double lucro = 0;

        List<Produto> listaDeCarros;
        listaDeCarros = new ArrayList<>();

        try {
            listaDeCarros = car.obterListaDeCarros();
        } catch (SQLException ex) {
            Logger.getLogger(Tela_atualizar.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {

            try {
                id = Integer.parseInt(id_att.getText());

            } catch (Exception e) {

            }

            try {
                custo = Double.parseDouble(custo_att.getText());
                campos_ok += 1;
                custo_att.setBackground(coloruse_green);
                custo_stt.setText("Valor correto");

            } catch (Exception e) {
                custo_att.setBackground(coloruse_red);
                custo_stt.setText("Informe um valor correto");
            }

            for (Produto carroLocal : listaDeCarros) {

                id_atual = carroLocal.getIdProdutos();

                if (id_atual == id) {

                    valor = carroLocal.getValor();
                    ok = 1;
                    campos_ok += 1;

                    id_att.setBackground(coloruse_green);
                    id_stt.setText("ID Encontrado");
                }
            }

            if (ok == 0) {
                id_att.setBackground(coloruse_red);
                id_stt.setText("ID Não Encontrado");
            }

            if (campos_ok == 2 && ok == 1) {
                lucro = valor - custo;

                car.buscaPorId(id, carro);

                carro.setCusto(custo);
                carro.setLucro(lucro);

                car.atualizaCarro(carro, id);

                custo_att.setBackground(coloruse_green);
                custo_stt.setText("Produto atualizado");
            }

        } catch (Exception e) {
            status_att = "ERRO AO ATUALIZAR";
            custo_att.setBackground(coloruse_red);
        }


    }//GEN-LAST:event_cus_btActionPerformed

    private void prod_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prod_btActionPerformed
        val_stt.setText("");
        prod_stt.setText("");
        est_stt.setText("");
        custo_stt.setText("");
        vm_stt.setText("");

        valor_att.setBackground(white);
        prod_att.setBackground(white);
        est_att.setBackground(white);
        custo_att.setBackground(white);
        vm_att.setBackground(white);

        Produto carro = new Produto();
        ProdutosDAO car = new ProdutosDAO();

        int id = 0;

        int id_atual, ok = 0;

        String produto = "";

        List<Produto> listaDeCarros;
        listaDeCarros = new ArrayList<>();

        try {
            listaDeCarros = car.obterListaDeCarros();
        } catch (SQLException ex) {
            Logger.getLogger(Tela_atualizar.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            try {
                id = Integer.parseInt(id_att.getText());
            } catch (Exception e) {

            }

            for (Produto carroLocal : listaDeCarros) { // Iterator: Para cada carro na lista de carros...
                id_atual = carroLocal.getIdProdutos();

                if (id_atual == id) {
                    ok = 1;

                }

            }

            if (ok == 1) {
                id_att.setBackground(coloruse_green);
                id_stt.setText("ID Encontrado");

                produto = prod_att.getText();

                if (prod_att.getText().trim().isEmpty()) {
                    prod_att.setBackground(coloruse_red);
                    prod_stt.setText("Informe um valor");

                } else {
                    prod_att.setBackground(coloruse_green);

                    car.buscaPorId(id, carro);

                    carro.setProduto(produto);

                    car.atualizaCarro(carro, id);

                    prod_stt.setText("Produto Atualizado");

                }

            } else {
                id_att.setBackground(coloruse_red);
                id_stt.setText("ID Não Encontrado");

                produto = prod_att.getText();

                if (prod_att.getText().trim().isEmpty()) {
                    prod_att.setBackground(coloruse_red);
                    prod_stt.setText("Informe um valor");
                } else {
                    prod_att.setBackground(coloruse_green);
                    prod_stt.setText("Valor correto");
                }
            }

        } catch (Exception e) {

        }


    }//GEN-LAST:event_prod_btActionPerformed

    private void val_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_val_btActionPerformed
        val_stt.setText("");
        prod_stt.setText("");
        est_stt.setText("");
        custo_stt.setText("");
        vm_stt.setText("");

        valor_att.setBackground(white);
        prod_att.setBackground(white);
        est_att.setBackground(white);
        custo_att.setBackground(white);
        vm_att.setBackground(white);

        Produto carro = new Produto();
        ProdutosDAO car = new ProdutosDAO();

        String status_att = "Produto atualizado";

        int id = 0;

        int id_atual = 0;

        double valor = 0;

        double custo = 0;

        double lucro = 0;

        int ok = 0;
        int campos_corretos = 0;

        List<Produto> listaDeCarros;
        listaDeCarros = new ArrayList<>();

        try {
            listaDeCarros = car.obterListaDeCarros();
        } catch (SQLException ex) {
            Logger.getLogger(Tela_atualizar.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {

            try {
                id = Integer.parseInt(id_att.getText());

            } catch (Exception e) {

            }

            try {
                valor = Double.parseDouble(valor_att.getText());
                campos_corretos += 1;
                val_stt.setText("Valor correto");
                valor_att.setBackground(coloruse_green);

            } catch (Exception e) {
                val_stt.setText("Informe um valor correto");
                valor_att.setBackground(coloruse_red);

            }

            for (Produto carroLocal : listaDeCarros) { // Iterator: Para cada carro na lista de carros...
                id_atual = carroLocal.getIdProdutos();

                if (id_atual == id) {
                    id_stt.setText("ID Encontrado");
                    id_att.setBackground(coloruse_green);

                    custo = carroLocal.getCusto();

                    ok = 1;
                    campos_corretos += 1;
                }
            }

            if (ok == 0) {
                id_stt.setText("ID Não Existe");
                id_att.setBackground(coloruse_red);
            }

            if (ok == 1 && campos_corretos == 2) {

                lucro = valor - custo;

                car.buscaPorId(id, carro);

                carro.setValor(valor);
                carro.setLucro(lucro);

                car.atualizaCarro(carro, id);

                valor_att.setBackground(coloruse_green);
                val_stt.setText("Produto Atualizado");

            }

        } catch (Exception e) {

        }


    }//GEN-LAST:event_val_btActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_atualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_atualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_atualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_atualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_atualizar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton att_bt;
    private javax.swing.JButton cus_bt;
    private javax.swing.JTextField custo_att;
    private javax.swing.JLabel custo_stt;
    private javax.swing.JTextField est_att;
    private javax.swing.JButton est_bt;
    private javax.swing.JLabel est_stt;
    private javax.swing.JTextField id_att;
    private javax.swing.JLabel id_stt;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField prod_att;
    private javax.swing.JButton prod_bt;
    private javax.swing.JLabel prod_stt;
    private javax.swing.JButton val_bt;
    private javax.swing.JLabel val_stt;
    private javax.swing.JTextField valor_att;
    private javax.swing.JTextField vm_att;
    private javax.swing.JButton vm_bt;
    private javax.swing.JLabel vm_stt;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
    }
}
